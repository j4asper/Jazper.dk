@inherits LayoutComponentBase

@* <MudDialogProvider/> *@
@* <MudSnackbarProvider/> *@
<MudPopoverProvider/>
<MudThemeProvider Theme="@_theme" IsDarkMode="true"/>
<MudLayout>
    <MudAppBar Elevation="1">
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Primary" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        </MudHidden>
        <MudButton Href="/">
            <MudImage Src="images/jazper.png" Width="30"/>
            <MudText Typo="Typo.h5" Class="ml-3 gradient-text">Jasper</MudText>
        </MudButton>
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudSpacer/>
            <MudStack Row="true" Spacing="4">
                @foreach (var pageEntry in _pages)
                {
                    <MudButton 
                        Variant="Variant.Text" 
                        Size="Size.Large" 
                        Color="Color.Primary" 
                        EndIcon="@pageEntry.Icon" 
                        Href="@pageEntry.Path">@pageEntry.Name</MudButton>
                }
            </MudStack>
        </MudHidden>
    </MudAppBar>

    <MudDrawer id="nav-drawer" Breakpoint="Breakpoint.MdAndUp" Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu>
            @foreach (var pageEntry in _pages)
            {
                <MudNavLink 
                    Href="@pageEntry.Path" 
                    Match="NavLinkMatch.All" 
                    IconColor="Color.Primary" 
                    Icon="@pageEntry.Icon">@pageEntry.Name</MudNavLink>
            }
        </MudNavMenu>
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private MudTheme? _theme;
    private bool _drawerOpen;
    
    private List<(string Path, string Icon, string Name)> _pages =
    [
        new ("/projects", Icons.Custom.Uncategorized.FolderOpen, "Projects"),
        new ("/experience", Icons.Material.Filled.Work, "Experience")
    ];
    
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(255,255,255,0.8)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#0c8fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        // AppbarBackground = "rgba(26,26,39,0.8)",
        AppbarBackground = "rgba(26,26,39,1)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };
}